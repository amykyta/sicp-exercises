;3.7
;(define (make-account balance password)
;  (define (withdraw amount)
;    (if (>= balance amount)
;        (begin (set! balance (- balance amount))
;               balance)
;        "Insufficient funds."))
;  (define (deposit amount)
;    (set! balance (+ balance amount))
;    balance)
;  (define (dispatch m)
;    (cond ((eq? m 'withdraw) withdraw)
;          ((eq? m 'deposit) deposit)
;          (else (error "Uknown request -- MAKE-ACCOUNT" m))))
;  (lambda (pass op)
;    (if (eq? pass password)
;        (dispatch op)
;        (lambda (_) "Incorrect password."))))
;(define acc (make-account 50 'abc))

(define (make-joint existing-acct existing-pass pass-for-joint)
  (lambda (pass op)
    (if (eq? pass pass-for-joint)
        (existing-acct existing-pass op)
        (lambda (_) (error "Denied.")))))